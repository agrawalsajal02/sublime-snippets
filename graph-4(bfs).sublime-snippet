<snippet>
    <content><![CDATA[//bfs
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
vector<ll>v[100000];
bool visi[100000];
ll level[100000];//do not use pointer bcoz then u dont able to use memset
ll parent[100000];
void bfs(ll a){
visi[a]=1;
queue<ll>q;
q.push(a);
level[a]=0;
parent[a]=-1;
while(!q.empty()){
    ll temp=q.front();q.pop();
   // cout<<" "<<temp<<" ";
    for(ll i=0;i<v[temp].size();i++){
        if(visi[v[temp][i]]==0){
            q.push(v[temp][i]);
            visi[v[temp][i]]=1;
            parent[v[temp][i]]=temp;
            level[v[temp][i]]=level[temp]+1;
        }
    }
}
}
void find(ll dest){
    ll temp=dest;
    while(temp!=-1){
        cout<<temp<<" <- ";
        temp=parent[temp];
          }
}
int main(){
cout<<" enter the number of vertices and edges"<<endl;
ll n,e;
cin>>n>>e;
for(ll i=0;i<e;i++){
    ll a,b;
    cin>>a>>b;
    v[a].push_back(b);
    v[b].push_back(a);
}
memset(visi,0,sizeof(visi));
memset(level,-1,sizeof(level));

for(ll x=0;x<n;x++){
    if(visi[x]==0){
        bfs(x);
    }
}/*
ll p;cin>>p;
cout<<" shortest path is "<<endl;
find(p);*/
for (auto& q : v) {
   q.clear();
}
/*
6 7
0 1
1 2
0 4
2 4
2 3
3 5
3 4
3

gives:-
0  1  4  2  3  5 

shortest path is 
3 <- 4 <- 0 <- 

*/
}

]]></content>
    <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
    <tabTrigger>graph-4(bfs)</tabTrigger>
    <!-- Optional: Set a scope to limit where the snippet will trigger -->
    <!-- <scope>source.python</scope> -->
</snippet>
