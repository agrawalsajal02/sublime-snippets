<snippet>
    <content><![CDATA[//floyd warshall's algo
//min( shortest_path(S to U) + shortest_path(U to T)) for all vertices U in the graph. 
#include<iostream>
using namespace std;
#define ll long long
int main(){
  ll n,m;
  cin>>n>>m;
  ll dis[n][n];
for(ll i=0;i<n;i++){
for(ll j=0;j<n;j++){
  dis[i][j]=1e18;
}
}
for(ll i=0;i<m;i++){
  ll a,b,c;
  cin>>a>>b>>c;
a--;
b--;
dis[a][b]=c;
}
  for(ll k=0;k<n;k++){
    for(ll i=0;i<n;i++){
      for(ll j=0;j<n;j++){
dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);
      }

      }
    }

for(ll i=1;i<n;i++){
  cout<<dis[0][i]<<" ";
}


  }
]]></content>
    <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
     <tabTrigger>graph-21(floyd_warshal)</tabTrigger> 
    <!-- Optional: Set a scope to limit where the snippet will trigger -->
    <!-- <scope>source.python</scope> -->
</snippet>
