<snippet>
    <content><![CDATA[/*/-----


    Written By:- Sajal Agrawal
          (Have Patience)

/*/
#include<bits/stdc++.h>
using namespace std;
#pragma GCC target ("avx2")
#pragma GCC optimization ("O3")
#pragma GCC optimization ("unroll-loops")
#define ll long long int
#define f(i,a,b) for(ll (i)=(a);(i)<(b);(i)++)
#define rf(i,a,b) for(ll (i)=(a);(i)>=(b);(i)--)
#define mod 1000000007
#define fi first
#define se second
#define pa pair <ll,ll>
#define mp make_pair
#define c(t) cout<<t<<"\n"
#define pb push_back
#define ln '\n'
#define forstl(i,v) for(auto &i: v)
#define PRI(x) cerr<<#x<<'='<<x<<endl;
#define clz(a) __builtin_clz(a) // count leading zeroes
#define ctz(a) __builtin_ctz(a) // count trailing zeroes
#define popc(a) __builtin_popcount(a) // count set bits (for ints only diff for ll)
//https://gcc.gnu.org/onlinedocs/gcc/Other-Builtins.html for other in built
#define all(con) con.begin(),con.end()
#define sz(x) ((long long)x.size())
#define error(args...) { string _s = #args; replace(_s.begin(), _s.end(), ',', ' '); stringstream _ss(_s); istream_iterator<string> _it(_ss); err(_it, args); }

ll dp[5010][5010];

ll find(ll a[],ll b[],ll i,ll j,ll n,ll m){
if(i==n){
 return 0;
 }

 if(j>=m&&i<n){
    return INT_MAX;
 }
 if(dp[i][j]!=-1){
    return dp[i][j];
 }

ll ans=INT_MAX;
//cout<<" at "<<i<<" "<<j<<endl;

    ans=min(ans,find(a,b,i,j+1,n,m));
  //  cout<<" ans1 "<<ans<<" "<<i<<" "<<j<<endl;
 ans=min(ans,abs(a[i]-b[j])+find(a,b,i+1,j+1,n,m));
//cout<<" ans2 "<<ans<<" "<<i<<" "<<j<<endl;

dp[i][j]=ans;
return ans;
}
int main(){

    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
ll n,m;
cin>>n>>m;
ll a[n],b[m];
f(i,0,n){
    cin>>a[i];
}
f(j,0,m){
    cin>>b[j];
}
sort(a,a+n);
sort(b,b+m);
f(i,0,n+1){
    f(j,0,m+1){
        dp[i][j]=-1;
    }
}
cout<<find(a,b,0,0,n,m)<<endl;









}



]]></content>
    <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
    <tabTrigger>dp-ex(hackerblock_vacation)</tabTrigger> 
    <!-- Optional: Set a scope to limit where the snippet will trigger -->
    <!-- <scope>source.python</scope> -->
</snippet>
