<snippet>
    <content><![CDATA[//checking bipartite ness of graph
//alternate coloring is possible or not
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
vector<ll>v[100000];

bool isBipartite(ll n){
//maintain a color array 
ll color[100000];
  memset(color,-1,sizeof(color));
  color[n]=0;
  queue<ll>q;
  q.push(n);
  while(!q.empty()){
   ll u=q.front();q.pop();
   for(auto V:v[u]){
    if(color[V]==color[u]){
      return false;
    }
    if(color[V]==-1){
     color[V]=1-color[u];
     q.push(V);
    }
   }



  }
  return true; 
}
int main(){
ll n,e;
cin>>n>>e;
for(ll i=0;i<e;i++){
ll a,b;
cin>>a>>b;
v[a].push_back(b);
v[b].push_back(a);}
if(isBipartite(0)){
cout<<"graph is bipartite"<<endl;
}
else{
  cout<<" graph is not bipartite"<<endl;
}
/*
4 5
0 1
2 0
1 3
2 3
0 3   
 not bipartite

 4 5
0 1
2 0
1 3
2 3

bipartite
*/

}
]]></content>
    <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
    <tabTrigger>graph-9(bipartite)</tabTrigger>
    <!-- Optional: Set a scope to limit where the snippet will trigger -->
    <!-- <scope>source.python</scope> -->
</snippet>
