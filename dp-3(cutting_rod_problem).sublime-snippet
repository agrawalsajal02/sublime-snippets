<snippet>
    <content><![CDATA[//cutting rod problem
#include<bits/stdc++.h>
using namespace std;
#define ll long long int
ll memo[1000]={0};
ll co=0;
/*
time compxicity of memorization
1+2+3+++++n-1+n-2 === nsquare time complexixcity


*/
ll recu(ll a[],ll n){
co++;
if(n==0){
    return 0;
}
if(memo[n]!=0){
    return memo[n];
}
ll ma=INT_MIN;
for(ll len=1;len<=n;len++){
 ma=max(ma,a[len]+recu(a,n-len));
   
}
memo[n]=ma;
return ma;
}
//dp solution
ll rod_dp(ll a[],ll totallen){
ll dp[1000]={};
dp[0]=0;
for(ll len=1;len<=totallen;len++){
ll best=0;
for(ll cut=1;cut<=len;cut++){
    best=max(best,a[cut]+dp[len-cut]);
}
dp[len]=best;
}

return dp[totallen];
}
int main(){
cout<<"  enter the length of rod"<<endl;
ll n;
cin>>n;
ll a[1000];
for(ll w=1;w<=n;w++){
 cin>>a[w];   
}
cout<<recu(a,n)<<endl;
cout<<"total calls  :- "<<co<<endl;
cout<<"dp solution :-"<<endl;

cout<<rod_dp(a,n)<<endl;

/*
4
2 3 2 5

ans-8
*/
/*
4
1 3 2 5
ans-6
*/


}
]]></content>
    <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
    <tabTrigger>dp-3(cutting_rod_problem)</tabTrigger> -->
    <!-- Optional: Set a scope to limit where the snippet will trigger -->
    <!-- <scope>source.python</scope> -->
</snippet>
